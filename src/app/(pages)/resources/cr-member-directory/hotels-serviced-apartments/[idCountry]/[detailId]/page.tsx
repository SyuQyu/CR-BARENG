'use client';
import { BasicCard, Button, HeroCard, HotelCard, ImageWithFallback, Input } from "@/components/common";
import { blogsTabsData, cardData, crMemberDirectoryCategories, detailCrMemberDirectoryHotelsImg, halalFriendlyFacilitiesCrMemberDirectory } from "@/constants/dummyData";
import { Carousel as Carousel2, CarouselContent as CarouselContent2, CarouselItem as CarouselItem2, CarouselNextCustom as CarouselNext2, CarouselPreviousCustom as CarouselPrevious2, CarouselDots as CarouselDots2 } from "@/components/ui/carouselCustom2";
import Link from "next/link";
import { useParams } from "next/navigation";
import { formatParams } from "@/utils";
import { Search, X } from "lucide-react";
import { useEffect, useState } from "react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious, type CarouselApi } from "@/components/ui/defaultCarousel";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Dialog, DialogContent, DialogClose } from "@/components/ui/dialog";
import clsx from "clsx";

export default function CertifiedProfessionalsDirectoryPage() {
    const params = useParams<{ detailId: string }>();
    const [isDialogOpen, setIsDialogOpen] = useState(false);
    const [selectedImageIndex, setSelectedImageIndex] = useState(0);
    const [api, setApi] = useState<CarouselApi | null>(null);
    const [currentSlide, setCurrentSlide] = useState(0);
    const images = detailCrMemberDirectoryHotelsImg;
    const [selectedCategory, setSelectedCategory] = useState("halal-friendly-facilities");
    const handleImageClick = (index: number) => {
        setSelectedImageIndex(index);
        setCurrentSlide(index);
        setIsDialogOpen(true);
    };

    // Update current slide when the carousel changes
    useEffect(() => {
        if (!api) return;

        const onSelect = () => {
            setCurrentSlide(api.selectedScrollSnap());
        };

        api.on("select", onSelect);
        api.on("reInit", onSelect);

        // Set initial slide
        if (isDialogOpen) {
            api.scrollTo(selectedImageIndex);
        }

        return () => {
            api.off("select", onSelect);
        };
    }, [api, isDialogOpen, selectedImageIndex]);

    // Handle thumbnail click
    const handleThumbnailClick = (index: number) => {
        if (api) {
            api.scrollTo(index);
            setCurrentSlide(index);
        }
    };

    return (
        <div className="w-full flex flex-col justify-center items-center">
            <section className="mt-7 sm:mt-14 w-full flex flex-col gap-8 justify-center items-center max-w-[1440px]">
                <section className="px-6 lg:px-8 w-full flex flex-col justify-center items-center">
                    <div className=" w-full h-full border p-4">
                        <div className="grid grid-cols-1 md:grid-cols-3 w-full h-full gap-4 justify-center items-center p-4">
                            {/* Main Image */}
                            <div
                                className="cursor-pointer w-full md:col-span-2"
                                onClick={() => handleImageClick(0)}
                            >
                                <ImageWithFallback
                                    width={0}
                                    height={0}
                                    sizes="100vw"
                                    className="w-full h-[250px] sm:h-[350px] object-cover md:h-[520px]"
                                    priority={false}
                                    src={images[0].imageUrl}
                                    alt={images[0].title}
                                />
                            </div>

                            {/* Thumbnail Images */}
                            <div className="grid grid-cols-2 w-full gap-4 relative">
                                {/* Show 4 images on desktop, but only 2 on mobile */}
                                {images.slice(1, 5).map((image, idx) => {
                                    const index = idx + 1; // Start from index 1 (since index 0 is the main image)
                                    return (
                                        <div
                                            key={index}
                                            className={`cursor-pointer ${idx >= 2 ? 'md:block hidden' : ''}`}
                                            onClick={() => handleImageClick(index)}
                                        >
                                            <ImageWithFallback
                                                width={0}
                                                height={0}
                                                sizes="100vw"
                                                className="w-full md:h-[250px] h-[100px] object-cover"
                                                priority={false}
                                                src={image.imageUrl}
                                                alt={image.title}
                                            />
                                        </div>
                                    );
                                })}
                                <div className="absolute md:bottom-4 bottom-2 w-auto md:right-4 right-2 flex items-center justify-center h-7 px-4 py-4 bg-white border-[#E3E2E6] border text-primary-cr-500">
                                    <button
                                        className="w-full h-full flex flex-row gap-1 items-center justify-center"
                                        onClick={() => handleImageClick(0)}
                                    >
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M2.63024 1.16669C2.64232 1.16669 2.65441 1.1667 2.66651 1.1667C2.67862 1.1667 2.69071 1.16669 2.70279 1.16669C2.9855 1.16664 3.26025 1.16658 3.48686 1.19705C3.74233 1.2314 4.03385 1.31508 4.27599 1.55722C4.51813 1.79936 4.60181 2.09088 4.63616 2.34635C4.66663 2.57296 4.66657 2.84771 4.66652 3.13042C4.66652 3.1425 4.66651 3.15459 4.66651 3.1667C4.66651 3.1788 4.66652 3.19089 4.66652 3.20297C4.66657 3.48568 4.66663 3.76043 4.63616 3.98704C4.60181 4.24251 4.51813 4.53403 4.27599 4.77617C4.03385 5.01832 3.74233 5.102 3.48686 5.13634C3.26025 5.16681 2.9855 5.16676 2.70279 5.1667C2.69071 5.1667 2.67862 5.1667 2.66651 5.1667C2.65441 5.1667 2.64232 5.1667 2.63024 5.1667C2.34753 5.16676 2.07278 5.16681 1.84617 5.13634C1.5907 5.102 1.29918 5.01832 1.05704 4.77617C0.814894 4.53403 0.731213 4.24251 0.696866 3.98704C0.666399 3.76043 0.666453 3.48568 0.666509 3.20297C0.666511 3.19089 0.666513 3.1788 0.666513 3.1667C0.666513 3.15459 0.666511 3.1425 0.666509 3.13042C0.666453 2.84771 0.666399 2.57296 0.696866 2.34635C0.731213 2.09088 0.814894 1.79936 1.05704 1.55722C1.29918 1.31508 1.5907 1.2314 1.84617 1.19705C2.07278 1.16658 2.34753 1.16664 2.63024 1.16669ZM2.01898 2.51916C2.01875 2.52074 2.01853 2.52236 2.01831 2.52401C2.00126 2.65081 1.99985 2.83358 1.99985 3.1667C1.99985 3.49981 2.00126 3.68258 2.01831 3.80938C2.01853 3.81103 2.01875 3.81265 2.01898 3.81423C2.02056 3.81446 2.02218 3.81468 2.02383 3.8149C2.15063 3.83195 2.3334 3.83336 2.66651 3.83336C2.99963 3.83336 3.1824 3.83195 3.3092 3.8149C3.31085 3.81468 3.31247 3.81446 3.31405 3.81423C3.31427 3.81265 3.31449 3.81103 3.31472 3.80938C3.33176 3.68258 3.33318 3.49981 3.33318 3.1667C3.33318 2.83358 3.33176 2.65081 3.31472 2.52401C3.31449 2.52236 3.31427 2.52074 3.31405 2.51916C3.31247 2.51894 3.31085 2.51871 3.3092 2.51849C3.1824 2.50145 2.99963 2.50003 2.66651 2.50003C2.3334 2.50003 2.15063 2.50145 2.02383 2.51849C2.02218 2.51871 2.02056 2.51894 2.01898 2.51916ZM7.96357 1.16669C7.97565 1.16669 7.98774 1.1667 7.99985 1.1667C8.01195 1.1667 8.02404 1.16669 8.03612 1.16669C8.31883 1.16664 8.59358 1.16658 8.82019 1.19705C9.07566 1.2314 9.36718 1.31508 9.60932 1.55722C9.85147 1.79936 9.93515 2.09088 9.96949 2.34635C9.99996 2.57296 9.99991 2.84771 9.99985 3.13042C9.99985 3.1425 9.99985 3.15459 9.99985 3.1667C9.99985 3.1788 9.99985 3.19089 9.99985 3.20297C9.99991 3.48568 9.99996 3.76043 9.96949 3.98704C9.93515 4.24251 9.85147 4.53403 9.60932 4.77617C9.36718 5.01832 9.07566 5.102 8.82019 5.13634C8.59358 5.16681 8.31883 5.16676 8.03612 5.1667C8.02404 5.1667 8.01195 5.1667 7.99985 5.1667C7.98774 5.1667 7.97565 5.1667 7.96357 5.1667C7.68086 5.16676 7.40611 5.16681 7.1795 5.13634C6.92403 5.102 6.63251 5.01832 6.39037 4.77617C6.14823 4.53403 6.06455 4.24251 6.0302 3.98704C5.99973 3.76043 5.99979 3.48568 5.99984 3.20297C5.99984 3.19089 5.99985 3.1788 5.99985 3.1667C5.99985 3.15459 5.99984 3.1425 5.99984 3.13042C5.99979 2.84771 5.99973 2.57296 6.0302 2.34635C6.06455 2.09088 6.14823 1.79936 6.39037 1.55722C6.63251 1.31508 6.92403 1.2314 7.1795 1.19705C7.40611 1.16658 7.68086 1.16664 7.96357 1.16669ZM7.35231 2.51916C7.35209 2.52074 7.35186 2.52236 7.35164 2.52401C7.3346 2.65081 7.33318 2.83358 7.33318 3.1667C7.33318 3.49981 7.3346 3.68258 7.35164 3.80938C7.35186 3.81103 7.35209 3.81265 7.35231 3.81423C7.35389 3.81446 7.35551 3.81468 7.35716 3.8149C7.48396 3.83195 7.66673 3.83336 7.99985 3.83336C8.33296 3.83336 8.51573 3.83195 8.64253 3.8149C8.64418 3.81468 8.6458 3.81446 8.64738 3.81423C8.64761 3.81265 8.64783 3.81103 8.64805 3.80938C8.6651 3.68258 8.66651 3.49981 8.66651 3.1667C8.66651 2.83358 8.6651 2.65081 8.64805 2.52401C8.64783 2.52236 8.64761 2.52074 8.64738 2.51916C8.6458 2.51894 8.64418 2.51871 8.64253 2.51849C8.51573 2.50145 8.33296 2.50003 7.99985 2.50003C7.66673 2.50003 7.48396 2.50145 7.35716 2.51849C7.35551 2.51871 7.35389 2.51894 7.35231 2.51916ZM13.2969 1.16669C13.309 1.16669 13.3211 1.1667 13.3332 1.1667C13.3453 1.1667 13.3574 1.16669 13.3695 1.16669C13.6522 1.16664 13.9269 1.16658 14.1535 1.19705C14.409 1.2314 14.7005 1.31508 14.9427 1.55722C15.1848 1.79936 15.2685 2.09088 15.3028 2.34635C15.3333 2.57296 15.3332 2.8477 15.3332 3.13041C15.3332 3.14249 15.3332 3.15459 15.3332 3.1667C15.3332 3.1788 15.3332 3.1909 15.3332 3.20298C15.3332 3.48569 15.3333 3.76044 15.3028 3.98704C15.2685 4.24251 15.1848 4.53403 14.9427 4.77617C14.7005 5.01832 14.409 5.102 14.1535 5.13634C13.9269 5.16681 13.6522 5.16676 13.3695 5.1667C13.3574 5.1667 13.3453 5.1667 13.3332 5.1667C13.3211 5.1667 13.309 5.1667 13.2969 5.1667C13.0142 5.16676 12.7394 5.16681 12.5128 5.13634C12.2574 5.102 11.9658 5.01832 11.7237 4.77617C11.4816 4.53403 11.3979 4.24251 11.3635 3.98704C11.3331 3.76043 11.3331 3.48568 11.3332 3.20297C11.3332 3.19089 11.3332 3.1788 11.3332 3.1667C11.3332 3.15459 11.3332 3.1425 11.3332 3.13042C11.3331 2.84771 11.3331 2.57296 11.3635 2.34635C11.3979 2.09088 11.4816 1.79936 11.7237 1.55722C11.9658 1.31508 12.2574 1.2314 12.5128 1.19705C12.7394 1.16658 13.0142 1.16664 13.2969 1.16669ZM12.6856 2.51916C12.6854 2.52074 12.6852 2.52236 12.685 2.52401C12.6679 2.65081 12.6665 2.83358 12.6665 3.1667C12.6665 3.49981 12.6679 3.68258 12.685 3.80938C12.6852 3.81103 12.6854 3.81265 12.6856 3.81423C12.6872 3.81446 12.6888 3.81468 12.6905 3.8149C12.8173 3.83195 13.0001 3.83336 13.3332 3.83336C13.6663 3.83336 13.8491 3.83195 13.9759 3.8149C13.9775 3.81468 13.9791 3.81446 13.9807 3.81423C13.9809 3.81265 13.9812 3.81103 13.9814 3.80938C13.9984 3.68258 13.9998 3.49981 13.9998 3.1667C13.9998 2.83358 13.9984 2.65081 13.9814 2.52401C13.9812 2.52236 13.9809 2.52074 13.9807 2.51916C13.9791 2.51894 13.9775 2.51871 13.9759 2.51849C13.8491 2.50145 13.6663 2.50003 13.3332 2.50003C13.0001 2.50003 12.8173 2.50145 12.6905 2.51849C12.6888 2.51871 12.6872 2.51894 12.6856 2.51916ZM2.63024 6.50003C2.64232 6.50003 2.65441 6.50003 2.66651 6.50003C2.67862 6.50003 2.69071 6.50003 2.70279 6.50003C2.9855 6.49997 3.26025 6.49991 3.48686 6.53038C3.74233 6.56473 4.03385 6.64841 4.27599 6.89055C4.51813 7.1327 4.60181 7.42421 4.63616 7.67968C4.66663 7.90629 4.66657 8.18104 4.66652 8.46376C4.66652 8.47583 4.66651 8.48793 4.66651 8.50003C4.66651 8.51213 4.66652 8.52422 4.66652 8.5363C4.66657 8.81902 4.66663 9.09377 4.63616 9.32038C4.60181 9.57584 4.51813 9.86736 4.27599 10.1095C4.03385 10.3516 3.74233 10.4353 3.48686 10.4697C3.26025 10.5001 2.9855 10.5001 2.70279 10.5C2.69071 10.5 2.67862 10.5 2.66651 10.5C2.65441 10.5 2.64232 10.5 2.63024 10.5C2.34753 10.5001 2.07278 10.5001 1.84617 10.4697C1.5907 10.4353 1.29918 10.3516 1.05704 10.1095C0.814894 9.86736 0.731213 9.57584 0.696866 9.32038C0.666399 9.09377 0.666453 8.81901 0.666509 8.5363C0.666511 8.52422 0.666513 8.51213 0.666513 8.50003C0.666513 8.48793 0.666511 8.47584 0.666509 8.46376C0.666453 8.18104 0.666399 7.90629 0.696866 7.67968C0.731213 7.42421 0.814894 7.1327 1.05704 6.89055C1.29918 6.64841 1.5907 6.56473 1.84617 6.53038C2.07278 6.49991 2.34753 6.49997 2.63024 6.50003ZM2.01898 7.85249C2.01875 7.85408 2.01853 7.85569 2.01831 7.85735C2.00126 7.98414 1.99985 8.16691 1.99985 8.50003C1.99985 8.83315 2.00126 9.01592 2.01831 9.14271C2.01853 9.14436 2.01875 9.14598 2.01898 9.14757C2.02056 9.14779 2.02218 9.14801 2.02383 9.14823C2.15063 9.16528 2.3334 9.1667 2.66651 9.1667C2.99963 9.1667 3.1824 9.16528 3.3092 9.14823C3.31085 9.14801 3.31247 9.14779 3.31405 9.14757C3.31427 9.14598 3.31449 9.14436 3.31472 9.14271C3.33176 9.01592 3.33318 8.83315 3.33318 8.50003C3.33318 8.16691 3.33176 7.98414 3.31472 7.85735C3.31449 7.85569 3.31427 7.85408 3.31405 7.85249C3.31247 7.85227 3.31085 7.85205 3.3092 7.85183C3.1824 7.83478 2.99963 7.83336 2.66651 7.83336C2.3334 7.83336 2.15063 7.83478 2.02383 7.85183C2.02218 7.85205 2.02056 7.85227 2.01898 7.85249ZM7.96357 6.50003C7.97565 6.50003 7.98774 6.50003 7.99985 6.50003C8.01195 6.50003 8.02404 6.50003 8.03612 6.50003C8.31883 6.49997 8.59358 6.49991 8.82019 6.53038C9.07566 6.56473 9.36718 6.64841 9.60932 6.89055C9.85147 7.1327 9.93515 7.42421 9.96949 7.67968C9.99996 7.90629 9.99991 8.18104 9.99985 8.46376C9.99985 8.47583 9.99985 8.48793 9.99985 8.50003C9.99985 8.51213 9.99985 8.52422 9.99985 8.5363C9.99991 8.81902 9.99996 9.09377 9.96949 9.32038C9.93515 9.57584 9.85147 9.86736 9.60932 10.1095C9.36718 10.3516 9.07566 10.4353 8.82019 10.4697C8.59358 10.5001 8.31883 10.5001 8.03612 10.5C8.02404 10.5 8.01195 10.5 7.99985 10.5C7.98774 10.5 7.97565 10.5 7.96357 10.5C7.68086 10.5001 7.40611 10.5001 7.1795 10.4697C6.92403 10.4353 6.63251 10.3516 6.39037 10.1095C6.14823 9.86736 6.06455 9.57584 6.0302 9.32038C5.99973 9.09377 5.99979 8.81902 5.99984 8.5363C5.99984 8.52422 5.99985 8.51213 5.99985 8.50003C5.99985 8.48793 5.99984 8.47583 5.99984 8.46376C5.99979 8.18104 5.99973 7.90629 6.0302 7.67968C6.06455 7.42421 6.14823 7.1327 6.39037 6.89055C6.63251 6.64841 6.92403 6.56473 7.1795 6.53038C7.40611 6.49991 7.68086 6.49997 7.96357 6.50003ZM7.35231 7.85249C7.35209 7.85408 7.35186 7.85569 7.35164 7.85735C7.3346 7.98414 7.33318 8.16691 7.33318 8.50003C7.33318 8.83315 7.3346 9.01592 7.35164 9.14271C7.35186 9.14436 7.35209 9.14598 7.35231 9.14757C7.35389 9.14779 7.35551 9.14801 7.35716 9.14823C7.48396 9.16528 7.66673 9.1667 7.99985 9.1667C8.33296 9.1667 8.51573 9.16528 8.64253 9.14823C8.64418 9.14801 8.6458 9.14779 8.64738 9.14757C8.64761 9.14598 8.64783 9.14436 8.64805 9.14271C8.6651 9.01592 8.66651 8.83315 8.66651 8.50003C8.66651 8.16691 8.6651 7.98414 8.64805 7.85735C8.64783 7.85569 8.64761 7.85408 8.64738 7.85249C8.6458 7.85227 8.64418 7.85205 8.64253 7.85183C8.51573 7.83478 8.33296 7.83336 7.99985 7.83336C7.66673 7.83336 7.48396 7.83478 7.35716 7.85183C7.35551 7.85205 7.35389 7.85227 7.35231 7.85249ZM13.2969 6.50003C13.309 6.50003 13.3211 6.50003 13.3332 6.50003C13.3453 6.50003 13.3574 6.50003 13.3695 6.50003C13.6522 6.49997 13.9269 6.49991 14.1535 6.53038C14.409 6.56473 14.7005 6.64841 14.9427 6.89055C15.1848 7.1327 15.2685 7.42422 15.3028 7.67968C15.3333 7.90629 15.3332 8.18103 15.3332 8.46374C15.3332 8.47582 15.3332 8.48792 15.3332 8.50003C15.3332 8.51214 15.3332 8.52423 15.3332 8.53632C15.3332 8.81902 15.3333 9.09377 15.3028 9.32037C15.2685 9.57584 15.1848 9.86736 14.9427 10.1095C14.7005 10.3516 14.409 10.4353 14.1535 10.4697C13.9269 10.5001 13.6522 10.5001 13.3695 10.5C13.3574 10.5 13.3453 10.5 13.3332 10.5C13.3211 10.5 13.309 10.5 13.2969 10.5C13.0142 10.5001 12.7394 10.5001 12.5128 10.4697C12.2574 10.4353 11.9658 10.3516 11.7237 10.1095C11.4816 9.86736 11.3979 9.57584 11.3635 9.32037C11.3331 9.09377 11.3331 8.81902 11.3332 8.5363C11.3332 8.52423 11.3332 8.51213 11.3332 8.50003C11.3332 8.48793 11.3332 8.47583 11.3332 8.46375C11.3331 8.18104 11.3331 7.90629 11.3635 7.67968C11.3979 7.42422 11.4816 7.1327 11.7237 6.89055C11.9658 6.64841 12.2574 6.56473 12.5128 6.53038C12.7394 6.49991 13.0142 6.49997 13.2969 6.50003ZM12.6856 7.85249C12.6854 7.85408 12.6852 7.85569 12.685 7.85735C12.6679 7.98414 12.6665 8.16691 12.6665 8.50003C12.6665 8.83315 12.6679 9.01592 12.685 9.14271C12.6852 9.14436 12.6854 9.14598 12.6856 9.14757C12.6872 9.14779 12.6888 9.14801 12.6905 9.14823C12.8173 9.16528 13.0001 9.1667 13.3332 9.1667C13.6663 9.1667 13.8491 9.16528 13.9759 9.14823C13.9775 9.14801 13.9791 9.14779 13.9807 9.14757C13.9809 9.14598 13.9812 9.14436 13.9814 9.14271C13.9984 9.01592 13.9998 8.83315 13.9998 8.50003C13.9998 8.16691 13.9984 7.98414 13.9814 7.85735C13.9812 7.85569 13.9809 7.85408 13.9807 7.85249C13.9791 7.85227 13.9775 7.85205 13.9759 7.85183C13.8491 7.83478 13.6663 7.83336 13.3332 7.83336C13.0001 7.83336 12.8173 7.83478 12.6905 7.85183C12.6888 7.85205 12.6872 7.85227 12.6856 7.85249ZM2.63024 11.8334C2.64232 11.8334 2.65441 11.8334 2.66651 11.8334C2.67862 11.8334 2.69071 11.8334 2.70279 11.8334C2.9855 11.8333 3.26025 11.8332 3.48686 11.8637C3.74233 11.8981 4.03385 11.9817 4.27599 12.2239C4.51813 12.466 4.60181 12.7575 4.63616 13.013C4.66663 13.2396 4.66657 13.5144 4.66652 13.7971C4.66652 13.8092 4.66651 13.8213 4.66651 13.8334C4.66651 13.8455 4.66652 13.8576 4.66652 13.8696C4.66657 14.1523 4.66663 14.4271 4.63616 14.6537C4.60181 14.9092 4.51813 15.2007 4.27599 15.4428C4.03385 15.685 3.74233 15.7687 3.48686 15.803C3.26025 15.8335 2.98551 15.8334 2.7028 15.8334C2.69072 15.8334 2.67862 15.8334 2.66651 15.8334C2.6544 15.8334 2.64231 15.8334 2.63023 15.8334C2.34752 15.8334 2.07277 15.8335 1.84617 15.803C1.5907 15.7687 1.29918 15.685 1.05704 15.4428C0.814894 15.2007 0.731213 14.9092 0.696866 14.6537C0.666399 14.4271 0.666453 14.1523 0.666509 13.8696C0.666511 13.8576 0.666513 13.8455 0.666513 13.8334C0.666513 13.8213 0.666511 13.8092 0.666509 13.7971C0.666453 13.5144 0.666399 13.2396 0.696866 13.013C0.731213 12.7575 0.814894 12.466 1.05704 12.2239C1.29918 11.9817 1.5907 11.8981 1.84617 11.8637C2.07278 11.8332 2.34753 11.8333 2.63024 11.8334ZM2.01898 13.1858C2.01875 13.1874 2.01853 13.189 2.01831 13.1907C2.00126 13.3175 1.99985 13.5002 1.99985 13.8334C1.99985 14.1665 2.00126 14.3493 2.01831 14.476C2.01853 14.4777 2.01875 14.4793 2.01898 14.4809C2.02056 14.4811 2.02218 14.4813 2.02383 14.4816C2.15063 14.4986 2.3334 14.5 2.66651 14.5C2.99963 14.5 3.1824 14.4986 3.3092 14.4816C3.31085 14.4813 3.31247 14.4811 3.31405 14.4809C3.31427 14.4793 3.31449 14.4777 3.31472 14.476C3.33176 14.3493 3.33318 14.1665 3.33318 13.8334C3.33318 13.5002 3.33176 13.3175 3.31472 13.1907C3.31449 13.189 3.31427 13.1874 3.31405 13.1858C3.31247 13.1856 3.31085 13.1854 3.3092 13.1852C3.1824 13.1681 2.99963 13.1667 2.66651 13.1667C2.3334 13.1667 2.15063 13.1681 2.02383 13.1852C2.02218 13.1854 2.02056 13.1856 2.01898 13.1858ZM7.96357 11.8334C7.97565 11.8334 7.98774 11.8334 7.99985 11.8334C8.01195 11.8334 8.02404 11.8334 8.03612 11.8334C8.31883 11.8333 8.59358 11.8332 8.82019 11.8637C9.07566 11.8981 9.36718 11.9817 9.60932 12.2239C9.85147 12.466 9.93515 12.7575 9.96949 13.013C9.99996 13.2396 9.99991 13.5144 9.99985 13.7971C9.99985 13.8092 9.99985 13.8213 9.99985 13.8334C9.99985 13.8455 9.99985 13.8576 9.99985 13.8696C9.99991 14.1523 9.99996 14.4271 9.96949 14.6537C9.93515 14.9092 9.85147 15.2007 9.60932 15.4428C9.36718 15.685 9.07566 15.7687 8.82019 15.803C8.59359 15.8335 8.31884 15.8334 8.03613 15.8334C8.02405 15.8334 8.01195 15.8334 7.99985 15.8334C7.98774 15.8334 7.97564 15.8334 7.96356 15.8334C7.68085 15.8334 7.40611 15.8335 7.1795 15.803C6.92403 15.7687 6.63251 15.685 6.39037 15.4428C6.14823 15.2007 6.06455 14.9092 6.0302 14.6537C5.99973 14.4271 5.99979 14.1523 5.99984 13.8696C5.99984 13.8576 5.99985 13.8455 5.99985 13.8334C5.99985 13.8213 5.99984 13.8092 5.99984 13.7971C5.99979 13.5144 5.99973 13.2396 6.0302 13.013C6.06455 12.7575 6.14823 12.466 6.39037 12.2239C6.63251 11.9817 6.92403 11.8981 7.1795 11.8637C7.40611 11.8332 7.68086 11.8333 7.96357 11.8334ZM7.35231 13.1858C7.35209 13.1874 7.35186 13.189 7.35164 13.1907C7.3346 13.3175 7.33318 13.5002 7.33318 13.8334C7.33318 14.1665 7.3346 14.3493 7.35164 14.476C7.35186 14.4777 7.35209 14.4793 7.35231 14.4809C7.35389 14.4811 7.35551 14.4813 7.35716 14.4816C7.48396 14.4986 7.66673 14.5 7.99985 14.5C8.33296 14.5 8.51573 14.4986 8.64253 14.4816C8.64418 14.4813 8.6458 14.4811 8.64738 14.4809C8.64761 14.4793 8.64783 14.4777 8.64805 14.476C8.6651 14.3493 8.66651 14.1665 8.66651 13.8334C8.66651 13.5002 8.6651 13.3175 8.64805 13.1907C8.64783 13.189 8.64761 13.1874 8.64738 13.1858C8.6458 13.1856 8.64418 13.1854 8.64253 13.1852C8.51573 13.1681 8.33296 13.1667 7.99985 13.1667C7.66673 13.1667 7.48396 13.1681 7.35716 13.1852C7.35551 13.1854 7.35389 13.1856 7.35231 13.1858ZM13.2969 11.8334C13.309 11.8334 13.3211 11.8334 13.3332 11.8334C13.3453 11.8334 13.3574 11.8334 13.3695 11.8334C13.6522 11.8333 13.9269 11.8332 14.1535 11.8637C14.409 11.8981 14.7005 11.9817 14.9427 12.2239C15.1848 12.466 15.2685 12.7575 15.3028 13.013C15.3333 13.2396 15.3332 13.5144 15.3332 13.7971C15.3332 13.8092 15.3332 13.8213 15.3332 13.8334C15.3332 13.8455 15.3332 13.8576 15.3332 13.8697C15.3332 14.1524 15.3333 14.4271 15.3028 14.6537C15.2685 14.9092 15.1848 15.2007 14.9427 15.4428C14.7005 15.685 14.409 15.7687 14.1535 15.803C13.9269 15.8335 13.6522 15.8334 13.3695 15.8334C13.3574 15.8334 13.3453 15.8334 13.3332 15.8334C13.3211 15.8334 13.309 15.8334 13.2969 15.8334C13.0142 15.8334 12.7394 15.8335 12.5128 15.803C12.2574 15.7687 11.9658 15.685 11.7237 15.4428C11.4816 15.2007 11.3979 14.9092 11.3635 14.6537C11.3331 14.4271 11.3331 14.1523 11.3332 13.8696C11.3332 13.8576 11.3332 13.8455 11.3332 13.8334C11.3332 13.8213 11.3332 13.8092 11.3332 13.7971C11.3331 13.5144 11.3331 13.2396 11.3635 13.013C11.3979 12.7575 11.4816 12.466 11.7237 12.2239C11.9658 11.9817 12.2574 11.8981 12.5128 11.8637C12.7394 11.8332 13.0142 11.8333 13.2969 11.8334ZM12.6856 13.1858C12.6854 13.1874 12.6852 13.189 12.685 13.1907C12.6679 13.3175 12.6665 13.5002 12.6665 13.8334C12.6665 14.1665 12.6679 14.3493 12.685 14.476C12.6852 14.4777 12.6854 14.4793 12.6856 14.4809C12.6872 14.4811 12.6888 14.4813 12.6905 14.4816C12.8173 14.4986 13.0001 14.5 13.3332 14.5C13.6663 14.5 13.8491 14.4986 13.9759 14.4816C13.9775 14.4813 13.9791 14.4811 13.9807 14.4809C13.9809 14.4793 13.9812 14.4777 13.9814 14.476C13.9984 14.3493 13.9998 14.1665 13.9998 13.8334C13.9998 13.5002 13.9984 13.3175 13.9814 13.1907C13.9812 13.189 13.9809 13.1874 13.9807 13.1858C13.9791 13.1856 13.9775 13.1854 13.9759 13.1852C13.8491 13.1681 13.6663 13.1667 13.3332 13.1667C13.0001 13.1667 12.8173 13.1681 12.6905 13.1852C12.6888 13.1854 12.6872 13.1856 12.6856 13.1858Z" fill="#453CFF" />
                                        </svg>
                                        <p className="md:text-desktop-body-2 text-desktop-body-3 font-semibold whitespace-nowrap">See All Images</p>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div className="flex flex-col gap-2 w-full h-full">
                            <div className="flex gap-3 text-sm flex-wrap">
                                <span className="text-desktop-label-s bg-gray-100 font-semibold text-black px-2 py-1 rounded">
                                    HONG KONG -  HONG KONG SAR
                                </span>
                                <span className="text-desktop-label-s bg-primary-cr-950 font-semibold text-white px-2 py-1 rounded">
                                    HOTEL
                                </span>
                            </div>
                            <div className="flex flex-row justify-start items-center gap-1">
                                {
                                    [1, 2, 3, 4, 5].map((_, index) => (
                                        <svg key={index} xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                            <path d="M12 1C11.3351 1 10.9077 1.39386 10.6882 1.64243C10.4927 1.86382 10.2992 2.16043 10.129 2.42134L7.45456 6.51574L2.92762 7.91587C2.63996 8.00463 2.30491 8.10801 2.03831 8.23737C1.72101 8.39133 1.26193 8.69335 1.07421 9.29953C0.88995 9.89454 1.08741 10.3988 1.24835 10.7012C1.38777 10.9631 1.59653 11.2475 1.78099 11.4987L4.67821 15.4495L4.5474 20.439C4.53891 20.7569 4.52942 21.1118 4.56297 21.4063C4.6004 21.7348 4.71925 22.2816 5.22812 22.6695C5.75394 23.0703 6.3262 23.0233 6.66584 22.9528C6.95518 22.8928 7.28447 22.7697 7.56632 22.6643L12 21.01L16.4336 22.6643C16.7155 22.7697 17.0448 22.8928 17.3342 22.9528C17.6738 23.0233 18.2461 23.0703 18.7719 22.6695C19.2807 22.2816 19.3996 21.7348 19.437 21.4063C19.4706 21.1118 19.4611 20.7569 19.4526 20.439L19.3218 15.4495L22.219 11.4987C22.4035 11.2475 22.6122 10.9631 22.7516 10.7012C22.9126 10.3988 23.1101 9.89454 22.9258 9.29953C22.7381 8.69335 22.279 8.39133 21.9617 8.23737C21.6951 8.10802 21.36 8.00463 21.0724 7.91587L16.5454 6.51574L13.8711 2.42136C13.7009 2.16045 13.5073 1.86383 13.3118 1.64244C13.0923 1.39386 12.6649 1 12 1Z" fill="#FFE849" />
                                        </svg>
                                    ))
                                }
                            </div>
                            <div className="flex md:flex-row flex-col justify-between items-center w-full h-full">
                                <div className="md:block w-full h-full flex flex-row justify-between items-center">
                                    <p className="md:text-desktop-heading-4 text-mobile-heading-3 font-bold w-full md:w-[50%]">The Park Lane Hong Kong, Autograph Collection</p>
                                    <ImageWithFallback
                                        width={0}
                                        height={0}
                                        sizes="100vw"
                                        className="w-[118px] md:hidden block object-cover rounded-lg"
                                        priority={false}
                                        src={"/image/cr-member-directory/rating.png"}
                                        alt="Badge Image"
                                    />
                                </div>
                                <div className="flex md:mt-0 mt-3 flex-row md:h-[111px] md:w-auto w-full h-full justify-center md:justify-end items-center gap-6">
                                    <ImageWithFallback
                                        width={0}
                                        height={0}
                                        sizes="100vw"
                                        className="w-[118px] h-full md:block hidden object-cover rounded-lg"
                                        priority={false}
                                        src={"/image/cr-member-directory/rating.png"}
                                        alt="Badge Image"
                                    />
                                    <div className="flex flex-col w-full h-full gap-3 ">
                                        <Link href={"#"} className="w-full">
                                            <Button
                                                className="w-full h-[41px] md:h-[49px] text-desktop-body-3 sm:text-desktop-body-2 bg-primary-cr-700 hover:bg-primary-cr-800 text-white !py-3 !px-6 !rounded-sm"
                                            // onClick={onSeeDetail}
                                            >
                                                <div className="flex flex-row justify-center items-center gap-2">
                                                    <p>Book now on Halal Trip</p>
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="21" viewBox="0 0 20 21" fill="none">
                                                        <path fill-rule="evenodd" clip-rule="evenodd" d="M8.27228 1.33337H11.7276C13.2471 1.33335 14.4719 1.33333 15.4352 1.46284C16.4353 1.59731 17.2774 1.88497 17.9462 2.55376C18.615 3.22256 18.9027 4.06464 19.0371 5.06476C19.1666 6.02806 19.1666 7.25287 19.1666 8.77243V12.2277C19.1666 13.7472 19.1666 14.972 19.0371 15.9353C18.9027 16.9354 18.615 17.7775 17.9462 18.4463C17.2774 19.1151 16.4353 19.4028 15.4352 19.5372C14.4719 19.6667 13.2471 19.6667 11.7275 19.6667H8.27225C6.75272 19.6667 5.52793 19.6667 4.56464 19.5372C3.56452 19.4028 2.72244 19.1151 2.05364 18.4463C1.38485 17.7775 1.09719 16.9354 0.962723 15.9353C0.833211 14.972 0.83323 13.7472 0.833253 12.2277V8.7724C0.83323 7.25286 0.833211 6.02806 0.962723 5.06476C1.09719 4.06464 1.38485 3.22256 2.05364 2.55376C2.72244 1.88497 3.56452 1.59731 4.56464 1.46285C5.52794 1.33333 6.75274 1.33335 8.27228 1.33337ZM4.78672 3.11465C3.97141 3.22426 3.53967 3.42476 3.23215 3.73228C2.92464 4.03979 2.72414 4.47154 2.61453 5.28684C2.50169 6.12612 2.49992 7.23847 2.49992 8.83338V12.1667C2.49992 13.7616 2.50169 14.874 2.61453 15.7132C2.72414 16.5285 2.92464 16.9603 3.23215 17.2678C3.53967 17.5753 3.97141 17.7758 4.78672 17.8854C5.626 17.9983 6.73835 18 8.33325 18H11.6666C13.2615 18 14.3738 17.9983 15.2131 17.8854C16.0284 17.7758 16.4602 17.5753 16.7677 17.2678C17.0752 16.9603 17.2757 16.5285 17.3853 15.7132C17.4982 14.874 17.4999 13.7616 17.4999 12.1667V8.83337C17.4999 7.23847 17.4982 6.12612 17.3853 5.28684C17.2757 4.47154 17.0752 4.03979 16.7677 3.73227C16.4602 3.42476 16.0284 3.22426 15.2131 3.11465C14.3738 3.00181 13.2615 3.00004 11.6666 3.00004H8.33325C6.73835 3.00004 5.626 3.00181 4.78672 3.11465ZM10.9347 8.38701H8.33326V6.72034H11.2799C11.295 6.72034 11.3102 6.72034 11.3253 6.72033C11.6786 6.72026 12.0221 6.7202 12.3053 6.75828C12.6247 6.80121 12.9891 6.90581 13.2917 7.20848C13.5944 7.51116 13.699 7.87556 13.742 8.1949C13.7801 8.47817 13.78 8.82163 13.7799 9.17504C13.7799 9.19012 13.7799 9.20522 13.7799 9.22034V12.1666H12.1132V9.56544L7.25583 14.4226L6.07735 13.244L10.9347 8.38701Z" fill="white" />
                                                    </svg>
                                                </div>
                                            </Button>
                                        </Link>
                                        <Link href={"#"} className="w-full">
                                            <Button
                                                className="w-full h-[41px] md:h-[49px] text-desktop-body-3 sm:text-desktop-body-2 border border-primary-cr-700 text-primary-cr-700 hover:bg-purple-50 !py-3 !px-6 !rounded-sm"
                                            // onClick={onExploreMore}
                                            >
                                                Visit Website
                                            </Button>
                                        </Link>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <section className="px-6 lg:px-8 w-full flex flex-col justify-center items-center">
                    <div className="flex sm:flex-row flex-col justify-center items-start w-full gap-1">
                        <div className="w-full">
                            <Tabs mobileMode="tabs" isMobile={false} defaultValue="halal-friendly-facilities" className="w-full">
                                <TabsList className="w-full max-w-[1440px] lg:overflow-hidden overflow-x-scroll !border-none">
                                    {[
                                        { value: "halal-friendly-facilities", label: "Halal Friendly Facilities" },
                                        { value: "about", label: "About" },
                                        { value: "location", label: "Location" }
                                    ].map((tab) => (
                                        <TabsTrigger
                                            className="w-full"
                                            key={tab.value}
                                            onClick={() => {
                                                const el = document.getElementById(tab.value);
                                                setSelectedCategory(tab.value);
                                                if (el) {
                                                    el.scrollIntoView({ behavior: "smooth" });
                                                }
                                            }}
                                            value={tab.value}>
                                            {tab.label}
                                        </TabsTrigger>
                                    ))}
                                </TabsList>
                            </Tabs>
                        </div>
                    </div>

                    {/* SECTION CONTENTS */}
                    <div id="halal-friendly-facilities" className={clsx("my-4 md:my-8 p-4 md:p-5 w-full rounded-sm scroll-mt-20", selectedCategory === "halal-friendly-facilities" ? "border border-primary-cr-500" : null)}>
                        <div className="w-full flex flex-col gap-5 justify-start items-start">
                            <p className="text-mobile-heading-4 md:text-desktop-heading-6 font-semibold">Halal Friendly Facilities</p>
                            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full">
                                {halalFriendlyFacilitiesCrMemberDirectory.map((facility, index) => (
                                    <div key={index} className="flex flex-row justify-start items-start gap-6">
                                        {
                                            facility.icon ? facility.icon : (
                                                <div className="w-[32px]"></div>
                                            )
                                        }
                                        <div className="flex flex-col gap-1">
                                            <p className="sm:text-desktop-body-2 text-mobile-body-3 font-semibold">{facility.title}</p>
                                            <div className="flex flex-col gap-1">
                                                {facility.descriptions.map((description, descIndex) => (
                                                    <p key={descIndex} className="sm:text-desktop-body-2 text-mobile-body-3 text-gray-500">
                                                        {description}
                                                    </p>
                                                ))}
                                            </div>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>

                    {
                        (selectedCategory !== "halal-friendly-facilities" && selectedCategory !== "about") && (
                            <div className="h-[1px] px-4 md:px-5 w-full bg-neutral-300"></div>
                        )
                    }

                    <div id="about" className={clsx("my-4 md:my-8 p-4 md:p-5 w-full rounded-sm scroll-mt-20", selectedCategory === "about" ? "border border-primary-cr-500" : null)}>
                        <p className="text-mobile-heading-4 md:text-desktop-heading-6 font-semibold mb-5">About</p>
                        <p className="md:text-desktop-body-2 text-mobile-body-3">The Park Lane Hong Kong, Autograph Collection is a contemporary oasis tailored for the discerning traveler of the 21st century. With its sophisticated design, attentive service, and breathtaking views of the harbor, Victoria Park, and the Kowloon skyline, the hotel serves as the ultimate sanctuary for modern urban nomads. Located on Hong Kong Island, the hotel offers convenient access to nearby mosques and halal-certified restaurants, as well as the city’s finest shopping and entertainment options.
                            As a Muslim-friendly hotel, we provide Qibla directions in rooms along with prayer mat, Mosques Direction Card and Halal breakfast corner at Ebb & Flow. Whether you are traveling for business or leisure, The Park Lane Hong Kong, Autograph Collection is the perfect destination for an unforgettable stay in Hong Kong.</p>
                    </div>

                    {
                        (selectedCategory !== "location" && selectedCategory !== "about") && (
                            <div className="h-[1px] px-4 md:px-5 w-full bg-neutral-300"></div>
                        )
                    }

                    <div id="location" className={clsx("my-4 md:my-8 p-4 md:p-5 w-full rounded-sm scroll-mt-20", selectedCategory === "location" ? "border border-primary-cr-500" : null)}>
                        <p className="text-mobile-heading-4 md:text-desktop-heading-6 font-semibold mb-5">Location</p>
                        <div className="flex flex-row justify-start items-start gap-2 mb-5">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M12 5.99976C9.79086 5.99976 8 7.79062 8 9.99976C8 12.2089 9.79086 13.9998 12 13.9998C14.2091 13.9998 16 12.2089 16 9.99976C16 7.79062 14.2091 5.99976 12 5.99976ZM10 9.99976C10 8.89519 10.8954 7.99976 12 7.99976C13.1046 7.99976 14 8.89519 14 9.99976C14 11.1043 13.1046 11.9998 12 11.9998C10.8954 11.9998 10 11.1043 10 9.99976Z" fill="#453CFF" />
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M12 0.999756C7.04434 0.999756 3 4.95844 3 9.87476C3 10.8683 3.32698 11.9568 3.78465 13.0159C4.24904 14.0905 4.88395 15.2155 5.57756 16.3041C6.96511 18.482 8.63793 20.5926 9.80047 21.9846C10.955 23.367 13.045 23.367 14.1995 21.9846C15.3621 20.5926 17.0349 18.482 18.4224 16.3041C19.116 15.2155 19.751 14.0905 20.2154 13.0159C20.673 11.9568 21 10.8683 21 9.87476C21 4.95844 16.9557 0.999756 12 0.999756ZM5 9.87476C5 6.09259 8.1191 2.99976 12 2.99976C15.8809 2.99976 19 6.09259 19 9.87476C19 10.4693 18.7937 11.264 18.3794 12.2225C17.972 13.1654 17.3964 14.1925 16.7357 15.2295C15.4146 17.303 13.8034 19.3388 12.6645 20.7025C12.3095 21.1276 11.6905 21.1276 11.3355 20.7025C10.1966 19.3388 8.58539 17.303 7.26431 15.2295C6.60361 14.1925 6.02805 13.1654 5.62055 12.2225C5.20633 11.264 5 10.4693 5 9.87476Z" fill="#453CFF" />
                            </svg>
                            <p className="md:text-desktop-body-2 text-mobile-body-3 text-neutral-500">310 Gloucester Rd, Causeway Bay, Hong Kong</p>
                        </div>
                        <div className="relative text-right w-full h-[300px] md:h-[450px]">
                            <div className="overflow-hidden bg-none w-full h-full">
                                <iframe
                                    width="500"
                                    height="450"
                                    style={{ border: 0 }}
                                    allowFullScreen
                                    loading="lazy"
                                    referrerPolicy="no-referrer-when-downgrade"
                                    src={`https://www.google.com/maps/embed/v1/place?q=indonesia&key=AIzaSyBFw0Qbyq9zTFTd-tUY6dZWTgaQzuU17R8`}
                                    className="w-full h-full"
                                ></iframe>
                            </div>
                        </div>
                    </div>
                </section>

            </section>

            {/* Image Dialog with Carousel */}
            <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>
                <DialogContent className="max-w-[300px] min-[400px]:max-w-[350px] min-[500px]:max-w-[450px] sm:max-w-[600px] md:max-w-[700px] lg:max-w-[800px] max-h-[750px] px-6 md:px-16 pt-6 md:pt-16 bg-white">
                    {/* Main Carousel */}
                    <Carousel
                        className="w-full relative"
                        setApi={setApi}
                    >
                        <CarouselContent>
                            {images.map((image, index) => (
                                <CarouselItem key={index}>
                                    <div className="flex justify-center w-full h-[200px] sm:h-[400px] items-center ">
                                        <ImageWithFallback
                                            width={0}
                                            height={0}
                                            sizes="100vw"
                                            className="w-full h-full object-cover"
                                            priority={true}
                                            src={image.imageUrl}
                                            alt={image.title}
                                        />
                                    </div>
                                </CarouselItem>
                            ))}
                        </CarouselContent>
                        <div className="absolute left-2 top-1/2 transform -translate-y-1/2 rounded-full p-1">
                            <CarouselPrevious className="h-10 w-10" />
                        </div>
                        <div className="absolute right-2 top-1/2 transform -translate-y-1/2 rounded-full p-1">
                            <CarouselNext className="h-10 w-10" />
                        </div>

                        {/* Image Counter - Now synchronized with current slide */}
                        <div className="sm:text-desktop-label-l text-desktop-label-s absolute bottom-4 right-2 bg-black/50 text-white px-3 py-1 rounded-md">
                            {currentSlide + 1} of {images.length}
                        </div>
                    </Carousel>

                    {/* Thumbnails below - Now synchronized with current slide */}
                    <div className="w-full sm:mt-4">
                        <Carousel className="w-full">
                            <CarouselContent>
                                {images.map((image, index) => (
                                    <CarouselItem key={index} className="basis-1/5 min-w-0 pl-2">
                                        <div
                                            className={`cursor-pointer h-full border-2 ${currentSlide === index ? 'border-blue-600' : 'border-transparent'}`}
                                            onClick={() => handleThumbnailClick(index)}
                                        >
                                            <ImageWithFallback
                                                width={0}
                                                height={0}
                                                sizes="100vw"
                                                className="w-full h-full object-cover"
                                                priority={false}
                                                src={image.imageUrl}
                                                alt={image.title}
                                            />
                                        </div>
                                    </CarouselItem>
                                ))}
                            </CarouselContent>
                        </Carousel>
                    </div>
                </DialogContent>
            </Dialog>
        </div >
    );
}